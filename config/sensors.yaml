
# sensor Lhota

#DB size
   - platform: sql
     db_url: mysql://pepe:pepanek1976@172.17.0.2:3306/homeassistant?charset=utf8
     queries:
       - name: DB size
         query: 'SELECT table_schema "database", Round(Sum(data_length + index_length) / 1024 / 1024, 1) "value" FROM information_schema.tables WHERE table_schema="homeassistant" GROUP BY table_schema;'
         column: 'value'
         unit_of_measurement: MB




   - platform: rest
     resource: https://www.hruzik.net:8123/api/states/sensor.teplota_jezirko
     method: GET
     name: Teplota jezirko Lhota
     value_template: '{{ value_json.state}}'
     unit_of_measurement: "°C"
     scan_interval: 120
     headers:
       Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiIyZjg3OGY2NDYwMjM0ZmRmODdjMWU1ZmNhZjdiMGZlNyIsImlhdCI6MTYzOTUwMTE2MCwiZXhwIjoxOTU0ODYxMTYwfQ.frHSZHQQ-gDIi85jvkTfzsCi1NcG6PIh4hVjfAWfMjg
       Content-Type: application/json 
       method: GET


   - platform: rest
     resource: https://www.hruzik.net:8123/api/states/sensor.teplota_venku
     method: GET
     name: Teplota venku Lhota
     value_template: '{{ value_json.state}}'
     unit_of_measurement: "°C"
     scan_interval: 120
     headers:
       Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiIyZjg3OGY2NDYwMjM0ZmRmODdjMWU1ZmNhZjdiMGZlNyIsImlhdCI6MTYzOTUwMTE2MCwiZXhwIjoxOTU0ODYxMTYwfQ.frHSZHQQ-gDIi85jvkTfzsCi1NcG6PIh4hVjfAWfMjg
       Content-Type: application/json
       method: GET







       #   - platform: template
       #     sensors:
       #       lhota_jezirko:
       #         friendly_name: "Teplota jezirko Lhota"
       #         value_template: "{{ states('sensor.jezirko_lhota') }}"
       #         unit_of_measurement: "°C"
       

       #   - platform: scrape
       #     resource: http://192.168.10.133/temp.xml
       #     select: "temp_1"
       #     value_template: '{{ (value | int) * 1 }}'
       #     unit_of_measurement: "°C"
       #     name: Teplota venku Lhota

# Teplota jezirko
   - platform: mqtt
     name: Teplota jezirko Vresina
     state_topic: "/ESP_jezirko-Vresina_57/teplota-jezirko/Temperature"
     device_class: temperature
     unit_of_measurement: "°C"
    

   - platform: mqtt
     name: Teplota Venku Vresina
     state_topic: "/ESP_jezirko-Vresina_57/teplota-venku/Temperature"
     device_class: temperature
     unit_of_measurement: "°C"
     
   - platform: mqtt
     name: Cidlo jezirko Wifi signal
     state_topic: "/ESP_jezirko-Vresina_57/wifi-signal/"
 #     device_class: timestamp
     unit_of_measurement: "Rssi"

   - platform: mqtt
     name: Cidlo jezirko uptime
     state_topic: "/ESP_jezirko-Vresina_57/Uptime/"
 #     device_class: signal_strength
     unit_of_measurement: "min"



   - platform: mqtt
     name: Cidlo jezirko CPU load
     state_topic: "/ESP_jezirko-Vresina_57/system load/"
 #     device_class: signal_strength
     unit_of_measurement: "%"


   - platform: mqtt
     name: Senzor_Topeni_Jezirko
     state_topic: "/ESP_jezirko_topeni/rele/switch"
 #     device_class: signal_strength
 #     unit_of_measurement: "%"

   - platform: mqtt
     name: Senzor_Topeni_Jezirko_ Wifi signal
     state_topic: "/ESP_jezirko_topeni/system_info/rssi"
 #     device_class: timestamp
     unit_of_measurement: "Rssi"     



#Vresina

   - platform: scrape
     resource: http://192.168.2.2:8181/usys.xml
     select: "sys140"
     value_template: '{{ (value | int) / 100 }}'
     unit_of_measurement: "°C"
     name: Nastavena teplota topeni

   - platform: scrape
     resource: http://192.168.2.2:8181/usys.xml
     select: "sys141"
     value_template: '{{ (value | int) / 100 }}'
     unit_of_measurement: "°C"
     name: Teplota patro

   - platform: scrape
     resource: http://192.168.2.2:8181/usys.xml
     select: "sys142"
     value_template: '{{ (value | int) / 100 }}'
     unit_of_measurement: "°C"
     name: Teplota prizemi

   - platform: scrape
     resource: http://192.168.2.2:8181/usys.xml
     select: "sys144"
     value_template: '{{ (value | int) / 100 }}'
     unit_of_measurement: "°C"
     name: Teplota venku PRO TOPENI vresina


   - platform: scrape
     resource: http://192.168.2.2:8181/usys.xml
     select: "sys144"
     value_template: '{{ (value | int) / 100 }}'
     unit_of_measurement: "°C"
     name: Hystereze topeni


   - platform: scrape
     resource: http://192.168.2.2:8181/xml.xml
     select: "temp_1"
     value_template: '{{ (value | int) / 1 }}'
     unit_of_measurement: "°C"
     name: Kotelna Vresina

   - platform: scrape
     resource: http://192.168.2.2:8181/xml.xml
     select: "ad1_si"
#     value_template: '{{ (value | int) / 1 }}'
#     unit_of_measurement: "  C"
     name: Napeti kotle do SDS

   - platform: scrape
     resource: http://192.168.2.2:8181/xml.xml
     select: "temp_2"
     value_template: '{{ (value | int) / 1 }}'
     unit_of_measurement: "°C"
     name: Teplota topne vody Vresina

   - platform: scrape
     resource: http://192.168.2.2:8181/xml.xml
     select: "temp_3"
     value_template: '{{ (value | int) / 1 }}'
     unit_of_measurement: "°C"
     name: Teplota topeni zpatecka Vresina

   - platform: scrape
     resource: http://192.168.2.2:8181/xml.xml
     select: "ad4_si"
#     value_template: '{{ (value | int) / 1 }}'
#     unit_of_measurement: "°C"
     name: Napeti z regulatoru Vresina


   - platform: scrape
     resource: http://192.168.2.2:8181/xml.xml
     select: "ad2_si"
#     value_template: '{{ (value | int) / 1 }}'
#     unit_of_measurement: "  C"
     name: Napeti z puvodniho regulatoru Vresina



   - platform: scrape
     resource: http://192.168.2.2:8181/xml.xml
     select: "relay_1"
     value_template: '{{ (value | int) / 1 }}'
#     unit_of_measurement: "°C"
     name: Rele1 topeni Vresina

   - platform: scrape
     resource: http://192.168.2.2:8181/xml.xml
     select: "relay_2"
     value_template: '{{ (value | int) / 1 }}'
#     unit_of_measurement: "°C"
     name: Rele2 topeni Vresina
     
  

   - platform: template
     sensors:
       teplota_nastav:
         friendly_name: "Nastavena teplota doma"
         value_template: "{{ state_attr('climate.topeni_1_patro', 'temperature')|replace('.','') | int*10  }}"

         
#   - platform: template
#     sensors:
#       state_roomba_lenka:
#         friendly_name: "1p iRobot stav"
#         unit_of_measurement: ''
#         value_template: "{{ states("vacuum.roomba") }}"


   - platform: template
     sensors:
       charge_roomba_lenka:
         friendly_name: "1p iRobot nabiti"
         unit_of_measurement: ''
         value_template: "{{ state_attr('vacuum.roomba_1p', 'battery_level') }}"

   - platform: template
     sensors:
       status_roomba_lenka:
         friendly_name: "1p iRobot status"
         unit_of_measurement: ''
         value_template: "{{ state_attr('vacuum.roomba_1p', 'status') }}"

   - platform: template
     sensors:
       bin_roomba_lenka:
         friendly_name: "1p iRobot kos"
         unit_of_measurement: ''
         value_template: "{{ state_attr('vacuum.roomba_1p', 'bin_present') }}"


   - platform: template
     sensors:
       software_roomba_lenka:
         friendly_name: "1p iRobot software"
         unit_of_measurement: ''
         value_template: "{{ state_attr('vacuum.roomba_1p', 'software_version') }}"


   - platform: template
     sensors:
       supported_features_roomba_lenka:
         friendly_name: "1p iRobot verze"
         unit_of_measurement: ''
         value_template: "{{ state_attr('vacuum.roomba_1p', 'supported_features') }}"


   - platform: template
     sensors:
       position_roomba_lenka:
         friendly_name: "1p iRobot pozice"
         unit_of_measurement: ''
         value_template: "{{ state_attr('vacuum.roomba_1p', 'position') }}"









   - platform: template
     sensors:
       charge_roomba_2:
         friendly_name: "2p iRobot nabiti"
         unit_of_measurement: ''
         value_template: "{{ state_attr('vacuum.roomba_2p', 'battery_level') }}"

   - platform: template
     sensors:
       status_roomba_2:
         friendly_name: "2p iRobot status"
         unit_of_measurement: ''
         value_template: "{{ state_attr('vacuum.roomba_2p', 'status') }}"

   - platform: template
     sensors:
       bin_roomba_2:
         friendly_name: "2p iRobot kos"
         unit_of_measurement: ''
         value_template: "{{ state_attr('vacuum.roomba_2p', 'bin_present') }}"


   - platform: template
     sensors:
       software_roomba_2:
         friendly_name: "2p iRobot software"
         unit_of_measurement: ''
         value_template: "{{ state_attr('vacuum.roomba_2p', 'software_version') }}"


   - platform: template
     sensors:
       supported_features_roomba_2:
         friendly_name: "2p iRobot verze"
         unit_of_measurement: ''
         value_template: "{{ state_attr('vacuum.roomba_2p', 'supported_features') }}"


   - platform: template
     sensors:
       position_roomba_2:
         friendly_name: "2p iRobot pozice"
         unit_of_measurement: ''
         value_template: "{{ state_attr('vacuum.roomba_2p', 'position') }}"



         

# Hodnoty SDS Vresina

   - platform: snmp
     name: Napajeni z kotle
     community: sdsxpublic
     host: 192.168.2.2
     baseoid: 1.3.6.1.4.1.33283.1.2.5.5.0
     accept_errors: true
#     unit_of_measurement: '% (45-97)'
#     value_template: '{{((value | int) / 1) | int}}'



   - platform: snmp
     name: Napajeni z regulatoru SDS
     community: sdsxpublic
     host: 192.168.2.2
     baseoid: 1.3.6.1.4.1.33283.1.2.5.8.0 
     accept_errors: true
#     unit_of_measurement: '% (45-97)'
#     value_template: '{{((value | int) / 1) | int}}'


   - platform: snmp
     name: Napajeni z regulatoru Junkers
     community: sdsxpublic
     host: 192.168.2.2
     baseoid: 1.3.6.1.4.1.33283.1.2.5.6.0 
     accept_errors: true
#     unit_of_measurement: '% (45-97)'
#     value_template: '{{((value | int) / 1) | int}}'

   - platform: snmp
     name: Teplota sklep
     community: sdsxpublic
     host: 192.168.2.2
     baseoid: 1.3.6.1.4.1.33283.1.2.6.1.2.1
     accept_errors: true
     unit_of_measurement: "°C"
     value_template: '{{((value | int) / 1) | int}}'


   - platform: snmp
     name: Teplota topeni
     community: sdsxpublic
     host: 192.168.2.2
     baseoid: 1.3.6.1.4.1.33283.1.2.6.1.2.2
     accept_errors: true
     unit_of_measurement: "°C"
     value_template: '{{((value | int) / 1) | int}}'



   - platform: snmp
     name: Teplota zpatecka
     community: sdsxpublic
     host: 192.168.2.2
     baseoid: 1.3.6.1.4.1.33283.1.2.6.1.2.3
     accept_errors: true
     unit_of_measurement: "°C"
     value_template: '{{((value | int) / 1) | int}}'


   - platform: snmp
     name: PWM procent plamen 
     community: sdsxpublic
     host: 192.168.2.2
     baseoid: 1.3.6.1.4.1.33283.1.2.4.2.0
     accept_errors: true




   - platform: template
     sensors:
       ping_dolca_average:
         value_template: "{{ state_attr('binary_sensor.dolca', 'round_trip_time_avg') }}"
         unit_of_measurement: ms

   - platform: template
     sensors:
       ping_dolca_min:
         value_template: "{{ state_attr('binary_sensor.dolca', 'round_trip_time_min') }}"
         unit_of_measurement: ms

   - platform: template
     sensors:
       ping_dolca_max:
         value_template: "{{ state_attr('binary_sensor.dolca', 'round_trip_time_max') }}"
         unit_of_measurement: ms


   - platform: template
     sensors:
       eqvitemp:
         friendly_name: "eqvitemp"
         unit_of_measurement: '°C'
         value_template: >-
           {% if states('sensor.teplota_venku_vresina')   | int > 10 %}
           38
           {% elif states('sensor.teplota_venku_vresina') | int > 6 %}
           39
           {% elif states('sensor.teplota_venku_vresina') | int > 2 %}
           40
           {% elif states('sensor.teplota_venku_vresina') | int > 0 %}
           42
           {% elif states('sensor.teplota_venku_vresina') | int > -2 %}
           42
           {% elif states('sensor.teplota_venku_vresina') | int > -5 %}
           43
           {% elif states('sensor.teplota_venku_vresina') | int > -10 %}
           45
           {% else %}
           35
           {% endif %}


   - platform: template
     sensors:
       cidlorizeni:
         friendly_name: "cidlo rizeni"
         value_template: >-
           {% if   states('input_select.vyber_cidlo') | int  < 2  %}
           {{states('sensor.teplota_prizemi')}}
           {% elif states('input_select.vyber_cidlo') | int > 1 %}
           {{states('sensor.teplota_patro')}}
           {% else %}
           {{states('sensor.teplota_patro')}}  
           {% endif %} 
